{"version":3,"sources":["services/localStorage.service.js","services/auth.service.js","services/http.service.js","services/user.service.js","utils/generateAuthError.js","utils/history.js","store/user.js","components/navBar.jsx","components/header.jsx","services/articles.service.js","store/articles.js","components/article.jsx","pages/articlesListPage.jsx","layout/main.jsx","components/notFound.jsx","utils/validator.js","components/textField.jsx","components/loginForm.jsx","components/registerForm.jsx","components/login.jsx","components/userProfile.jsx","components/addNewArticleForm.jsx","components/articlePage.jsx","App.js","reportWebVitals.js","store/createStore.js","index.js"],"names":["TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","idToken","localId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","params","key","process","REACT_APP_FIREBASE_KEY","authService","register","a","email","password","post","returnSecureToken","data","login","refresh","grant_type","refresh_token","http","configFile","apiEndPoint","console","log","interceptors","request","use","config","isFireBase","containSlash","test","url","slice","now","id_token","user_id","expires_in","accessToken","auth","error","Promise","reject","response","res","content","_id","Object","keys","map","status","toast","httpService","get","put","delete","patch","userEndpoint","userService","payload","getCurrentUser","update","generateAuthError","message","history","createBrowserHistory","initialState","entities","isLoading","userId","isLoggedIn","dataLoaded","userSlice","createSlice","name","reducers","userRequested","state","userReceved","action","userRequestFiled","authRequested","authRequestSuccess","authRequestFailed","userCreated","push","userLoggedOut","actions","userReducer","reducer","createAction","userCreateRequested","createUserFailed","createUser","dispatch","NavBar","useDispatch","useSelector","user","currentUser","useEffect","AppBar","position","Toolbar","Typography","variant","component","sx","flexGrow","style","color","textDecoration","to","Button","ml","IconButton","onClick","Header","articleEndPoint","articleService","remove","articleId","articlesSlice","lastFetch","articlesRequested","articlesReceved","articlesRequestFiled","articleCreated","articlesReducer","articleCreateRequested","createArticleFailed","getArticlesByIds","artId","articles","find","String","backColor","blue","Article","title","ArticlesById","link","cutContent","Card","maxWidth","bgcolor","marginBottom","CardActionArea","CardContent","gutterBottom","CardActions","size","ArticlesListPage","getState","date","LinearProgress","mt","Box","display","flexWrap","p","m","justifyContent","article","Main","marginTop","textAlign","NotFound","validator","errors","validate","validateMethod","statusValidate","trim","length","value","fieldName","TextField","label","type","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","prevState","defaultProps","LoginForm","useHistory","loginError","setData","setErrors","validatorConfig","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","handleChange","isValid","width","height","border","borderColor","boxShadow","onSubmit","e","preventDefault","redirect","location","from","pathname","code","errorMessage","marginLeft","disabled","RegisterForm","newData","signUp","Login","useParams","formType","setFormType","toggleFormType","role","UserProfile","AddNewArticleForm","description","text","nanoid","ArticlePage","match","ArticleById","elevation","mx","my","Link","href","App","window","outerHeight","outerWidth","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","combineReducers","configureStore","rootReducer","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7f25bcf.chunk.js","sourcesContent":["const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\nconst USERID_KEY = \"user-local-id\";\r\n\r\nexport function setTokens({\r\n    refreshToken,\r\n    idToken,\r\n    localId,\r\n    expiresIn = 3600\r\n}) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(USERID_KEY, localId);\r\n    localStorage.setItem(TOKEN_KEY, idToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n}\r\n\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_KEY);\r\n}\r\n\r\nexport function removeAuthData() {\r\n    localStorage.removeItem(USERID_KEY);\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(REFRESH_KEY);\r\n    localStorage.removeItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getUserId() {\r\n    return localStorage.getItem(USERID_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresDate,\r\n    getUserId,\r\n    removeAuthData\r\n};\r\n\r\nexport default localStorageService;\r\n","import axios from \"axios\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst httpAuth = axios.create({\r\n    baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\r\n    params: {\r\n        key: process.env.REACT_APP_FIREBASE_KEY\r\n    }\r\n});\r\n\r\nconst authService = {\r\n    register: async ({ email, password }) => {\r\n        const { data } = await httpAuth.post(`accounts:signUp`, {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        });\r\n        return data;\r\n    },\r\n    login: async ({ email, password }) => {\r\n        const { data } = await httpAuth.post(`accounts:signInWithPassword`, {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        });\r\n        return data;\r\n    },\r\n    refresh: async () => {\r\n        const { data } = await httpAuth.post(\"token\", {\r\n            grant_type: \"refresh_token\",\r\n            refresh_token: localStorageService.getRefreshToken()\r\n        });\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default authService;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport configFile from \"../config.json\";\r\nimport authService from \"./auth.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.apiEndPoint\r\n});\r\n\r\nconsole.log(configFile.apiEndPoint);\r\n\r\nhttp.interceptors.request.use(\r\n    async function (config) {\r\n        if (configFile.isFireBase) {\r\n            const containSlash = /\\/$/gi.test(config.url);\r\n            config.url =\r\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n\r\n            const expiresDate = localStorageService.getTokenExpiresDate();\r\n            const refreshToken = localStorageService.getRefreshToken();\r\n            if (refreshToken && expiresDate < Date.now()) {\r\n                const data = await authService.refresh();\r\n\r\n                localStorageService.setTokens({\r\n                    refreshToken: data.refresh_token,\r\n                    idToken: data.id_token,\r\n                    localId: data.user_id,\r\n                    expiresIn: data.expires_in\r\n                });\r\n            }\r\n            const accessToken = localStorageService.getAccessToken();\r\n            if (accessToken) {\r\n                config.params = { ...config.params, auth: accessToken };\r\n            }\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nfunction transformData(data) {\r\n    return data && !data._id\r\n        ? Object.keys(data).map((key) => ({\r\n              ...data[key]\r\n          }))\r\n        : data;\r\n}\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isFireBase) {\r\n            res.data = { content: transformData(res.data) };\r\n        }\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors =\r\n            error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n        if (!expectedErrors) {\r\n            console.log(error);\r\n            toast.error(\"Something was wrong. Try it later\");\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete,\r\n    patch: http.patch\r\n};\r\n\r\nexport default httpService;\r\n","import httpService from \"./http.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst userEndpoint = \"user/\";\r\n\r\nconst userService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(userEndpoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            userEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    getCurrentUser: async () => {\r\n        const { data } = await httpService.get(\r\n            userEndpoint + localStorageService.getUserId()\r\n        );\r\n        return data;\r\n    },\r\n    update: async (payload) => {\r\n        const { data } = await httpService.patch(\r\n            userEndpoint + localStorageService.getUserId(),\r\n            payload\r\n        );\r\n        return data;\r\n    }\r\n};\r\nexport default userService;\r\n","function generateAuthError(message) {\r\n    switch (message) {\r\n        case \"INVALID_PASSWORD\":\r\n            return \"Email или пароль введены некорректно\";\r\n        case \"EMAIL_EXIST\":\r\n            return \"Пользователь с таким Email уже существует\";\r\n        default:\r\n            return \"Слишком много попыток входа. Попробуйте позднее\";\r\n    }\r\n}\r\n\r\nexport default generateAuthError;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import { createSlice, createAction } from \"@reduxjs/toolkit\";\r\nimport authService from \"../services/auth.service\";\r\nimport localStorageService from \"../services/localStorage.service\";\r\nimport userService from \"../services/user.service\";\r\nimport generateAuthError from \"../utils/generateAuthError\";\r\nimport history from \"../utils/history\";\r\n\r\nconst initialState = localStorageService.getAccessToken()\r\n    ? {\r\n          entities: null,\r\n          isLoading: true,\r\n          error: null,\r\n          auth: { userId: localStorageService.getUserId() },\r\n          isLoggedIn: true,\r\n          dataLoaded: false\r\n      }\r\n    : {\r\n          entities: null,\r\n          isLoading: false,\r\n          error: null,\r\n          auth: null,\r\n          isLoggedIn: false,\r\n          dataLoaded: false\r\n      };\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers: {\r\n        userRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        userReceved: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        userRequestFiled: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        authRequested: (state) => {\r\n            state.error = null;\r\n        },\r\n        authRequestSuccess: (state, action) => {\r\n            state.auth = action.payload;\r\n            state.isLoggedIn = true;\r\n        },\r\n        authRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n        },\r\n        userCreated: (state, action) => {\r\n            state.entities.push(action.payload);\r\n        },\r\n        userLoggedOut: (state) => {\r\n            state.entities = null;\r\n            state.isLoggedIn = false;\r\n            state.auth = null;\r\n            state.dataLoaded = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst { actions, reducer: userReducer } = userSlice;\r\nconst {\r\n    userReceved,\r\n    userRequestFiled,\r\n    userRequested,\r\n    authRequestSuccess,\r\n    authRequestFailed,\r\n    userCreated,\r\n    userLoggedOut\r\n    // userUpdateSuccesed\r\n} = actions;\r\n\r\nconst authRequested = createAction(\"user/authRequested\");\r\nconst userCreateRequested = createAction(\"user/userCreateRequested\");\r\nconst createUserFailed = createAction(\"user/createUserFailed\");\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n    dispatch(userRequested());\r\n    try {\r\n        const { content } = await userService.getCurrentUser();\r\n        dispatch(userReceved(content));\r\n    } catch (error) {\r\n        dispatch(userRequestFiled(error.message));\r\n    }\r\n};\r\n\r\nexport const login =\r\n    ({ payload, redirect }) =>\r\n    async (dispatch) => {\r\n        const { email, password } = payload;\r\n        dispatch(authRequested());\r\n        try {\r\n            const data = await authService.login({ email, password });\r\n            dispatch(authRequestSuccess({ userId: data.localId }));\r\n            localStorageService.setTokens(data);\r\n            history.push(redirect);\r\n        } catch (error) {\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                const errorMessage = generateAuthError(message);\r\n                dispatch(authRequestFailed(errorMessage));\r\n            } else {\r\n                dispatch(authRequestFailed(error.message));\r\n            }\r\n        }\r\n    };\r\n\r\nexport const signUp =\r\n    ({ email, password, name }) =>\r\n    async (dispatch) => {\r\n        dispatch(authRequested());\r\n        try {\r\n            const data = await authService.register({ email, password });\r\n            localStorageService.setTokens(data);\r\n            dispatch(authRequestSuccess({ userId: data.localId }));\r\n            dispatch(\r\n                createUser({\r\n                    _id: data.localId,\r\n                    email,\r\n                    name\r\n                })\r\n            );\r\n        } catch (error) {\r\n            dispatch(authRequestFailed(error.message));\r\n        }\r\n    };\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorageService.removeAuthData();\r\n    dispatch(userLoggedOut());\r\n\r\n    history.push(\"/\");\r\n};\r\n\r\nfunction createUser(payload) {\r\n    return async function (dispatch) {\r\n        dispatch(userCreateRequested());\r\n        try {\r\n            const { content } = await userService.create(payload);\r\n            dispatch(userCreated(content));\r\n            history.push(\"/\");\r\n        } catch (error) {\r\n            dispatch(createUserFailed(error.message));\r\n        }\r\n    };\r\n}\r\n\r\nexport const getCurrentUserData = () => (state) => state.user.entities;\r\nexport const getIsLoggedIn = () => (state) => state.user.isLoggedIn;\r\nexport const getDataStatus = () => (state) => state.user.dataLoaded;\r\nexport const getCurrentUserId = () => (state) => state.user.auth.userId;\r\n\r\nexport const getAuthErrors = () => (state) => state.user.error;\r\n\r\nexport default userReducer;\r\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCurrentUserData, getIsLoggedIn, loadUser } from \"../store/user\";\nimport { Button, IconButton } from \"@mui/material\";\n\nconst NavBar = () => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    const logout = () => {\n        console.log(\"button for logout\");\n    };\n    const currentUser = useSelector(getCurrentUserData());\n    useEffect(() => {\n        dispatch(loadUser());\n    }, []);\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                    <Link\n                        style={{ color: \"inherit\", textDecoration: \"none\" }}\n                        to=\"/\"\n                    >\n                        Главная\n                    </Link>\n                </Typography>\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                    <Link\n                        style={{ color: \"inherit\", textDecoration: \"none\" }}\n                        to=\"/articles\"\n                    >\n                        Статьи\n                    </Link>\n                </Typography>\n                {isLoggedIn && (\n                    <Link\n                        style={{ color: \"inherit\", textDecoration: \"none\" }}\n                        to=\"/addArticle\"\n                    >\n                        <Button variant=\"contained\" color=\"info\">\n                            Добавить статью\n                        </Button>\n                    </Link>\n                )}\n\n                {isLoggedIn && currentUser ? (\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\"\n                        sx={{ flexGrow: 1, ml: 6 }}\n                    >\n                        {currentUser.name}\n                        <IconButton aria-label=\"exit\" onClick={logout}>\n                            <ExitToAppIcon />\n                        </IconButton>\n                    </Typography>\n                ) : (\n                    <Link\n                        style={{ color: \"inherit\", textDecoration: \"none\" }}\n                        to=\"/login\"\n                    >\n                        Войти\n                    </Link>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport NavBar from \"./navBar\";\n\nconst Header = () => {\n    return <NavBar />;\n};\n\nexport default Header;\n","import httpService from \"./http.service\";\r\n\r\nconst articleEndPoint = \"article/\";\r\n\r\nconst articleService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(articleEndPoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            articleEndPoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    remove: async (articleId) => {\r\n        const { data } = await httpService.delete(articleEndPoint + articleId);\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default articleService;\r\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport articleService from \"../services/articles.service\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { getCurrentUserId } from \"./user\";\r\n\r\nconst articlesSlice = createSlice({\r\n    name: \"articles\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null,\r\n        lastFetch: null\r\n    },\r\n    reducers: {\r\n        articlesRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        articlesReceved: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.lastFetch = Date.now();\r\n            state.isLoading = false;\r\n        },\r\n        articlesRequestFiled: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        articleCreated: (state, action) => {\r\n            state.entities.push(action.payload);\r\n        }\r\n    }\r\n});\r\n\r\nconst { actions, reducer: articlesReducer } = articlesSlice;\r\nconst {\r\n    articlesReceved,\r\n    articlesRequestFiled,\r\n    articlesRequested,\r\n    articleCreated\r\n} = actions;\r\n\r\nconst articleCreateRequested = createAction(\"articles/articleCreateRequested\");\r\nconst createArticleFailed = createAction(\"articles/createArticleFailed\");\r\n\r\nfunction isOutDated(date) {\r\n    if (Date.now() - date > 10 * 60 * 1000) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const loadArticlesList = () => async (dispatch, getState) => {\r\n    const { lastFetch } = getState().articles;\r\n    if (isOutDated(lastFetch)) {\r\n        dispatch(articlesRequested());\r\n        try {\r\n            const { content } = await articleService.get();\r\n            dispatch(articlesReceved(content));\r\n        } catch (error) {\r\n            dispatch(articlesRequestFiled(error.message));\r\n        }\r\n    }\r\n};\r\n\r\nexport const createNewArticle = (payload) => async (dispatch, getState) => {\r\n    dispatch(articleCreateRequested());\r\n    try {\r\n        const { content } = await articleService.create({\r\n            ...payload,\r\n            _id: nanoid(),\r\n            userId: getCurrentUserId()(getState())\r\n        });\r\n        dispatch(articleCreated(content));\r\n    } catch (error) {\r\n        dispatch(createArticleFailed(error.message));\r\n    }\r\n};\r\n\r\nexport const getArticles = () => (state) => state.articles.entities;\r\nexport const getArticlesLoadingStatus = () => (state) =>\r\n    state.articles.isLoading;\r\nexport const getArticlesByIds = (artId) => (state) => {\r\n    if (state.articles.entities) {\r\n        return state.articles.entities.find(\r\n            (a) => String(a._id) === String(artId)\r\n        );\r\n    } else return null;\r\n};\r\n\r\nexport default articlesReducer;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea, CardActions } from \"@mui/material\";\nimport { blue } from \"@mui/material/colors\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getArticlesByIds } from \"../store/articles\";\n\nconst backColor = blue[50];\n\nconst Article = ({ _id, title, content, link }) => {\n    const ArticlesById = useSelector(getArticlesByIds(_id));\n    const cutContent = ArticlesById.content\n        ? ArticlesById.content.slice(0, 58) + \"...\"\n        : \"Loading...\";\n\n    if (content) {\n        return (\n            <Card\n                sx={{\n                    maxWidth: 345,\n                    bgcolor: backColor,\n                    marginBottom: 5\n                }}\n            >\n                <CardActionArea>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                            {ArticlesById.title}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                            {cutContent}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <Link\n                        size=\"small\"\n                        color=\"primary\"\n                        to={`/articles/${ArticlesById._id}`}\n                    >\n                        Открыть\n                    </Link>\n                </CardActions>\n            </Card>\n        );\n    } else return null;\n};\n\nArticle.propTypes = {\n    _id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    title: PropTypes.string,\n    content: PropTypes.string,\n    link: PropTypes.string\n};\n\nexport default Article;\n","import React, { useEffect } from \"react\";\nimport Article from \"../components/article\";\nimport Box from \"@mui/material/Box\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    getArticles,\n    getArticlesLoadingStatus,\n    loadArticlesList\n} from \"../store/articles\";\nimport { LinearProgress } from \"@mui/material\";\n\nconst ArticlesListPage = () => {\n    const dispatch = useDispatch();\n    const articles = useSelector(getArticles());\n    const isLoading = useSelector(getArticlesLoadingStatus());\n\n    useEffect(() => {\n        dispatch(loadArticlesList());\n    }, []);\n    console.log(articles);\n\n    if (isLoading) return <LinearProgress sx={{ mt: 6 }} color=\"info\" />;\n\n    return (\n        <Box\n            sx={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                p: 1,\n                m: 1,\n                bgcolor: \"background.paper\",\n                justifyContent: \"space-around\"\n            }}\n        >\n            {articles.map((article) => (\n                <Article key={article._id} {...article} />\n            ))}\n        </Box>\n    );\n};\n\nexport default ArticlesListPage;\n","import React from \"react\";\nimport ArticlesListPage from \"../pages/articlesListPage\";\nconst Main = () => {\n    return (\n        <>\n            <h1\n                style={{\n                    marginTop: 2 + \"em\",\n                    marginBottom: 1 + \"em\",\n                    textAlign: \"center\"\n                }}\n            >\n                Привет, рада видеть Вас в моем блоге!\n            </h1>\n            <p>\n                Для того, чтобы почитать статьи вы можете кликнуть по ссылке Все\n                статьи в меню.\n            </p>\n            <p>\n                Для добавления новой статьи нужно авторизоваться, если аккаунта\n                еще нет зарегистрируйтесь.\n            </p>\n            <p>Приятного чтения! :)</p>\n            <p>\n                Заметка для меня(во время разработки): здесь как вариант\n                добавить картинку для поднятия настроения\n            </p>\n            <p>\n                Заметка для меня 2 (во время разработки): Статьи здесь, кажется,\n                не нужны\n            </p>\n            <ArticlesListPage />\n        </>\n    );\n};\n\nexport default Main;\n","import React from \"react\";\n\nconst NotFound = () => {\n    return <h2>404 Not found</h2>;\n};\n\nexport default NotFound;\n","export function validator(data, config) {\r\n    const errors = {};\r\n    function validate(validateMethod, data, config) {\r\n        let statusValidate;\r\n        switch (validateMethod) {\r\n            case \"isRequired\": {\r\n                if (typeof data === \"boolean\") {\r\n                    statusValidate = !data;\r\n                } else {\r\n                    statusValidate = data.trim() === \"\";\r\n                }\r\n                break;\r\n            }\r\n            case \"isEmail\":\r\n                {\r\n                    const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n                    statusValidate = !emailRegExp.test(data);\r\n                }\r\n\r\n                break;\r\n            case \"isCapitalSymbol\":\r\n                {\r\n                    const capitalRegExp = /[A-Z]+/g;\r\n                    statusValidate = !capitalRegExp.test(data);\r\n                }\r\n\r\n                break;\r\n            case \"isContainDigit\":\r\n                {\r\n                    const digitRegExp = /\\d+/g;\r\n                    statusValidate = !digitRegExp.test(data);\r\n                }\r\n                break;\r\n            case \"min\":\r\n                statusValidate = data.length < config.value;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (statusValidate) return config.message;\r\n    }\r\n    for (const fieldName in data) {\r\n        for (const validateMethod in config[fieldName]) {\r\n            const error = validate(\r\n                validateMethod,\r\n                data[fieldName],\r\n                config[fieldName][validateMethod]\r\n            );\r\n            if (error && !errors[fieldName]) {\r\n                errors[fieldName] = error;\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport VisibilityOutlinedIcon from \"@mui/icons-material/VisibilityOutlined\";\r\n// import VisibilityRoundedIcon from \"@mui/icons-material/VisibilityRounded\";\r\n\r\nconst TextField = ({ label, type, name, value, onChange, error }) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    const toggleShowPassword = () => {\r\n        setShowPassword((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <input\r\n                    type={showPassword ? \"text\" : type}\r\n                    id={name}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    name={name}\r\n                    className={getInputClasses()}\r\n                />\r\n                {type === \"password\" && (\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={toggleShowPassword}\r\n                    >\r\n                        <VisibilityOutlinedIcon />\r\n                        {/* <i\r\n                            className={\r\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\r\n                            }\r\n                        ></i> */}\r\n                    </button>\r\n                )}\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTextField.defaultProps = { type: \"text\" };\r\nTextField.propTypes = {\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Button } from \"@mui/material\";\r\nimport { validator } from \"../utils/validator\";\r\nimport TextField from \"./textField\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAuthErrors, login } from \"../store/user\";\r\n// import { toast } from \"react-toastify\";\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const loginError = useSelector(getAuthErrors());\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: { message: \"Email введен не корректно\" }\r\n        },\r\n        password: {\r\n            isRequired: { message: \"Пароль обязателен для заполнения\" },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одну цифру\"\r\n            },\r\n            min: { message: \"Пароль должен быть не менее 8 символов\", value: 8 }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n\r\n        const redirect = history.location.state\r\n            ? history.location.state.from.pathname\r\n            : \"/\";\r\n\r\n        dispatch(login({ payload: data, redirect }));\r\n    };\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                \"& > :not(style)\": {\r\n                    marginTop: 10,\r\n                    marginBottom: 5,\r\n                    width: 500,\r\n                    height: 340,\r\n                    border: 0.5,\r\n                    borderColor: \"lightblue\",\r\n                    p: 3,\r\n                    boxShadow: 5\r\n                },\r\n                justifyContent: \"center\"\r\n            }}\r\n        >\r\n            <form style={{ marginTop: 10 }} onSubmit={handleSubmit}>\r\n                <TextField\r\n                    label=\"электронная почта\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    onChange={handleChange}\r\n                    error={errors.email}\r\n                    variant=\"standard\"\r\n                    sx={{ width: 450 }}\r\n                />\r\n                <TextField\r\n                    label=\"Пароль\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={data.password}\r\n                    onChange={handleChange}\r\n                    error={errors.password}\r\n                    variant=\"standard\"\r\n                    sx={{ width: 450 }}\r\n                />\r\n                {loginError && <p className=\"text-danger\">{loginError}</p>}\r\n                <Button\r\n                    sx={{ marginTop: 3, width: 200, marginLeft: 18 }}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                >\r\n                    Войти\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"./textField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Button } from \"@mui/material\";\r\nimport { validator } from \"../utils/validator\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signUp } from \"../store/user\";\r\n// import { toast } from \"react-toastify\";\r\n\r\nconst RegisterForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\"\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: { message: \"Email введен не корректно\" }\r\n        },\r\n        password: {\r\n            isRequired: { message: \"Пароль обязателен для заполнения\" },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одну цифру\"\r\n            },\r\n            min: { message: \"Пароль должен быть не менее 8 символов\", value: 8 }\r\n        },\r\n        name: {\r\n            isRequired: {\r\n                message: \"Имя обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Имя должено состаять миниму из 3 символов\",\r\n                value: 2\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n\r\n        const newData = {\r\n            ...data\r\n        };\r\n        dispatch(signUp(newData));\r\n        console.log(newData);\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                \"& > :not(style)\": {\r\n                    marginTop: 10,\r\n                    width: 500,\r\n                    marginBottom: 5,\r\n                    border: 0.5,\r\n                    borderColor: \"lightblue\",\r\n                    p: 3,\r\n                    boxShadow: 5\r\n                },\r\n                justifyContent: \"center\"\r\n            }}\r\n        >\r\n            <form style={{ marginTop: 10 }} onSubmit={handleSubmit}>\r\n                <TextField\r\n                    label=\"электронная почта\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    onChange={handleChange}\r\n                    error={errors.email}\r\n                    variant=\"standard\"\r\n                    sx={{ width: 450 }}\r\n                />\r\n                <TextField\r\n                    label=\"Пароль\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={data.password}\r\n                    onChange={handleChange}\r\n                    error={errors.password}\r\n                    variant=\"standard\"\r\n                    sx={{ width: 450 }}\r\n                />\r\n                <TextField\r\n                    label=\"Имя\"\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                    error={errors.name}\r\n                />\r\n                <Button\r\n                    sx={{ marginTop: 3, width: 200, marginLeft: 18 }}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                >\r\n                    Зарегистрироваться\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { Box } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport LoginForm from \"./loginForm\";\nimport RegisterForm from \"./registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <Box\n            sx={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                \"& > :not(style)\": {\n                    marginTop: 10,\n                    width: 700,\n                    border: 0.5,\n                    borderColor: \"Blue\",\n                    p: 3,\n                    boxShadow: 5\n                },\n                justifyContent: \"center\"\n            }}\n        >\n            <div>\n                {formType === \"register\" ? (\n                    <>\n                        <h3 className=\"mb-4\">Регистрация</h3>\n                        <RegisterForm />\n                        <p>\n                            Уже есть аккаунт?{\" \"}\n                            <a role=\"button\" onClick={toggleFormType}>\n                                Войти\n                            </a>\n                        </p>\n                    </>\n                ) : (\n                    <>\n                        <h3>Вход</h3>\n                        <LoginForm />\n                        <p>\n                            Еще нет аккаунта?{\" \"}\n                            <a role=\"button\" onClick={toggleFormType}>\n                                Зарегистрируйся\n                            </a>\n                        </p>\n                    </>\n                )}\n            </div>\n        </Box>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\r\n\r\nconst UserProfile = () => {\r\n    return <></>;\r\n};\r\n\r\nexport default UserProfile;\r\n","import { Button } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TextField from \"./textField\";\r\nimport { validator } from \"../utils/validator\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createNewArticle } from \"../store/articles\";\r\n\r\nconst AddNewArticleForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        text: \"\",\r\n        userId: \"\",\r\n        link: \"\"\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        title: {\r\n            isRequired: {\r\n                message: \"Введите заголовок статьи\"\r\n            }\r\n        },\r\n        description: {\r\n            isRequired: {\r\n                message: \"Обязательно заполните короткое описание статьи\"\r\n            },\r\n            min: { message: \"Пароль должен быть не менее 8 символов\", value: 8 }\r\n        },\r\n        text: {\r\n            isRequired: {\r\n                message: \"Текст статьи обязателен для заполнение\"\r\n            },\r\n            min: {\r\n                message: \"Описание должно составлять не более 60 символов\",\r\n                value: 2\r\n            }\r\n        },\r\n        link: {\r\n            isRequired: {\r\n                message: \"Введите заголовок ссылку на материал\"\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n\r\n        const newData = {\r\n            ...data\r\n        };\r\n        dispatch(createNewArticle(newData));\r\n        console.log(newData);\r\n    };\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                \"& > :not(style)\": {\r\n                    marginTop: 10,\r\n                    width: 500,\r\n                    marginBottom: 5,\r\n                    border: 0.5,\r\n                    borderColor: \"lightblue\",\r\n                    p: 3,\r\n                    boxShadow: 5\r\n                },\r\n                justifyContent: \"center\"\r\n            }}\r\n        >\r\n            <h1>Добавление новой статьи</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField\r\n                    label=\"Заголовок\"\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={data.title}\r\n                    onChange={handleChange}\r\n                    // error={errors.title}\r\n                    variant=\"standard\"\r\n                    sx={{ width: 450 }}\r\n                />\r\n                <TextField\r\n                    label=\"Короткий текст\"\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={data.description}\r\n                    onChange={handleChange}\r\n                    // error={errors.description}\r\n                    variant=\"standard\"\r\n                    sx={{ width: 450 }}\r\n                />\r\n                <TextField\r\n                    label=\"Текст\"\r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    value={data.text}\r\n                    onChange={handleChange}\r\n                    // error={errors.description}\r\n                    variant=\"standard\"\r\n                    sx={{ width: 450 }}\r\n                />\r\n                <TextField\r\n                    label=\"Ссылка\"\r\n                    type=\"text\"\r\n                    name=\"link\"\r\n                    value={data.link}\r\n                    onChange={handleChange}\r\n                    // error={errors.description}\r\n                    variant=\"standard\"\r\n                    sx={{ width: 450 }}\r\n                />\r\n                <Button type=\"submit\" disabled={!isValid}>\r\n                    Опубликовать\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default AddNewArticleForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getArticlesByIds } from \"../store/articles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box, Typography, Link, LinearProgress } from \"@mui/material\";\r\n\r\nconst ArticlePage = ({ match }) => {\r\n    console.log(match.params.articleId);\r\n    const articleId = match.params.articleId;\r\n    const ArticleById = useSelector(getArticlesByIds(articleId));\r\n\r\n    if (!ArticleById) return <LinearProgress sx={{ mt: 6 }} color=\"info\" />;\r\n    return (\r\n        <Box\r\n            elevation={3}\r\n            sx={{\r\n                width: 70 + \"%\",\r\n                mx: \"auto\",\r\n                mt: 5\r\n            }}\r\n        >\r\n            <Typography\r\n                sx={{ mt: 3 }}\r\n                variant=\"h2\"\r\n                gutterBottom\r\n                component=\"div\"\r\n            >\r\n                {ArticleById.title}\r\n            </Typography>\r\n            <Typography sx={{ my: 5 }} variant=\"body1\" gutterBottom>\r\n                {ArticleById.content}\r\n            </Typography>\r\n            <Link href={ArticleById.link}>{ArticleById.link}</Link>\r\n        </Box>\r\n    );\r\n};\r\nArticlePage.propTypes = {\r\n    match: PropTypes.object,\r\n    title: PropTypes.string,\r\n    content: PropTypes.string,\r\n    link: PropTypes.string\r\n};\r\n\r\nexport default ArticlePage;\r\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport Header from \"./components/header\";\nimport Main from \"./layout/main\";\nimport ArticlesListPage from \"./pages/articlesListPage\";\nimport NotFound from \"./components/notFound\";\n// import ArticlePage from \"./components/articlePage\";\nimport Login from \"./components/login\";\nimport UserProfile from \"./components/userProfile\";\nimport AddNewArticleForm from \"./components/addNewArticleForm\";\nimport ArticlePage from \"./components/articlePage\";\n// import Article from \"./components/article\";\n\nfunction App() {\n    console.log(window.outerHeight, window.outerWidth);\n    return (\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/articles/:articleId\" component={ArticlePage} />\n                <Route path=\"/articles/\" component={ArticlesListPage} />\n\n                <Route path=\"/:?userId\" component={UserProfile} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/addArticle\" component={AddNewArticleForm} />\n                <Route path=\"/404\" component={NotFound} />\n                <Route path=\"/\" exact component={Main} />\n                <Redirect to=\"/404\" />\n            </Switch>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import articlesReducer from \"./articles\";\r\nimport userReducer from \"./user\";\r\n\r\nconst { combineReducers, configureStore } = require(\"@reduxjs/toolkit\");\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    articles: articlesReducer\r\n});\r\n\r\nexport function createStore() {\r\n    return configureStore({\r\n        reducer: rootReducer\r\n    });\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Provider } from \"react-redux\";\nimport history from \"./utils/history\";\nimport { Router } from \"react-router-dom\";\nimport { createStore } from \"./store/createStore\";\n\nconst store = createStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}